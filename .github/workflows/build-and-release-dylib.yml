name: Build and Release Bazel Target

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: macos-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Cache Bazel output
      uses: actions/cache@v2
      id: cache-bazel
      with:
        path: |
          ~/.cache/bazel
          bazel-out
        key: ${{ runner.os }}-bazel-${{ hashFiles('**/BUILD') }}
        restore-keys: |
          ${{ runner.os }}-bazel-

    - name: Build Bazel target
      run: |
        bazelisk build -c opt //xls/public:libxls.dylib

    - name: Create artifact directory
      run: mkdir -p artifacts

    - name: Copy Bazel target to artifacts
      run: cp -r bazel-bin/xls/public/libxls.dylib artifacts/

    - name: Copy stdlib files to artifacts
      run: cp -r xls/dslx/stdlib/*.x artifacts/

    - name: Copy modules files to artifacts
      run: cp -r xls/modules artifacts/modules

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: bazel-target
        path: artifacts/

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: bazel-target
        path: artifacts

    - name: Extract tag name
      id: extract_tag
      run: |
        TAG_NAME=${GITHUB_REF#refs/tags/}
        echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
        echo "Extracted tag name: $TAG_NAME"

    - name: Debug Extracted Tag Name
      run: echo "Tag Name is: ${{ env.TAG_NAME }}"

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.TAG_NAME }}
        release_name: ${{ env.TAG_NAME }}
        draft: false
        prerelease: false
        body: "Automated release by GitHub Actions."

    - name: Debug Release Output
      run: echo "Release URL: ${{ steps.create_release.outputs.upload_url }}"

    - name: Upload Release Asset (dylib)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/libxls.dylib
        asset_name: libxls.dylib
        asset_content_type: application/x-sharedlib

    - name: Upload Stdlib Files
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/*.x
        asset_name: stdlib-files
        asset_content_type: text/plain

    - name: Upload Modules Files
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/modules/**/*.x
        asset_name: modules-files
        asset_content_type: text/plain
