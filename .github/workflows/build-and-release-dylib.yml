name: Build and Release Bazel Target

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: macos-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Cache Bazel output
      uses: actions/cache@v2
      id: cache-bazel
      with:
        path: |
          ~/.cache/bazel
          bazel-out
        key: ${{ runner.os }}-bazel-${{ hashFiles('**/BUILD') }}
        restore-keys: |
          ${{ runner.os }}-bazel-

    #- name: Build Bazel target
    #  run: |
    #    bazelisk build -c opt //xls/public:libxls.dylib

    - name: Create artifact directory
      run: mkdir -p artifacts

    #- name: Copy Bazel target to artifacts
    #  run: cp -r bazel-bin/xls/public/libxls.dylib artifacts-dylib/

    #- name: Upload artifact
    #  uses: actions/upload-artifact@v2
    #  with:
    #    name: bazel-target
    #    path: artifacts-dylib/libxls.dylib

    - name: Create tarball of stdlib .x files
      run: cd xls/dslx && tar -czvf ../../artifacts/stdlib.tar.gz stdlib/*.x

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: stdlib-tarball
        path: artifacts/stdlib.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:

    #- name: Download artifact
    #  uses: actions/download-artifact@v2
    #  with:
    #    name: bazel-target
    #    path: artifacts-dylib/

    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: stdlib-tarball
        path: artifacts/

    - name: Print Token Scope
      run: |
        echo "Token: ${{ secrets.GITHUB_TOKEN }}"
        curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com

    - name: Extract tag name
      id: extract_tag
      run: |
        TAG_NAME=${GITHUB_REF#refs/tags/}
        echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
        echo "Extracted tag name: $TAG_NAME"

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        ACTIONS_STEP_DEBUG: true
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.TAG_NAME }}
        release_name: ${{ env.TAG_NAME }}
        draft: false
        prerelease: false

    #- name: Upload Release Asset
    #  uses: actions/upload-release-asset@v1
    #  env:
    #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #  with:
    #    upload_url: ${{ steps.create_release.outputs.upload_url }}
    #    asset_path: ./artifacts-dylib/libxls.dylib
    #    asset_name: libxls.dylib
    #    asset_content_type: application/x-sharedlib

    - name: Upload stdlib tarball
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/stdlib.tar.gz
        asset_name: stdlib.tar.gz
        asset_content_type: application/gzip
