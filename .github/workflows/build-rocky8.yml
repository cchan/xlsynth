# For experimenting with the Rocky8 linux build.

name: Rocky8 Build

on:
  workflow_dispatch:
  push:
    branches:
      - cdleary/release-dylib-workflow
    paths:
      - .github/workflows/build-rocky8.yml  # Only trigger on changes to this specific file

jobs:
  build-rocky8:
    runs-on: ubuntu-latest  # Use a GitHub-hosted runner
    container: rockylinux:8 # Specify the Docker container
    steps:
    - name: Install Python3
      run: |
        dnf install -y epel-release
        dnf config-manager --set-enabled crb
        dnf module reset python36
        dnf module enable python310
        dnf install -y python3.10
        alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 1
        alternatives --set python3 /usr/bin/python3.10
        # Verify the Python version
        python3 --version

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Cache Bazel output
      uses: actions/cache@v2
      id: cache-bazel
      with:
        path: |
          ~/.cache/bazel
          bazel-out
        key: ${{ runner.os }}-bazel-${{ hashFiles('**/BUILD') }}
        restore-keys: |
          ${{ runner.os }}-bazel-

    - name: Install bazelisk
      run: |
        dnf install -y curl unzip
        curl -Lo bazelisk https://github.com/bazelbuild/bazelisk/releases/download/v1.20.0/bazelisk-linux-amd64
        chmod +x bazelisk
        mv bazelisk /usr/local/bin/
        bazelisk version

    - name: Install Clang-17
      run: |
        dnf install -y llvm-toolset

    - name: Note Clang version
      run: clang-17 --version

    - name: Install build essentials
      run: |
        dnf groupinstall -y "Development Tools"
        dnf install libstdc++-devel

    - name: Build Bazel target
      run: |
        CC=clang-17 CXX=clang++-17 bazelisk build -c opt //xls/public:libxls.so //xls/public:c_api //xls/dslx:interpreter_main //xls/dslx/lsp:dslx_ls

